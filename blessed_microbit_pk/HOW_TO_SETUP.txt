Blessed nRF52 howto.
Jun 2022, Philipp H. Kindt <philipp.kindt@informatik.tu-chemnitz.de>

1) Install Eclipse C/C++ CDT from
https://projects.eclipse.org/?combine=c%2Fc%2B%2B

2) Install the following Eclipse plugins from the standard repository:
- C/C++ GCC Cross Compiler Support
- C/C++ GDB Hardware Debugging	
- C/C++ Memory View Enhancements
 .. and from https://download.eclipse.org/embed-cdt/updates/v6/
- Embedded C/C++ OpenOCD Debugging
 ... from embsysregview update site - http://embsysregview.sourceforge.net/update
- Embedded Systems Register View (SFR)
- EmbSysRegView Data

3) Install the following Ubuntu packages:
    - gcc-arm-none-eabi
    - gdb-multiarch

4) Install the latest openocd version:
git clone git://git.code.sf.net/p/openocd/code openocd-code


5) Create an empty directory. This will be where your source code is located

6) Download nrf52 SDK version nRF5_SDK_17.0.2 from 
https://www.nordicsemi.com/Software-and-tools/Software/nRF5-SDK/Download
place it in a subfolder of your project directory called
nRF5_SDK_17.0.2_d674dde
(when you unzip the SDK, this folder will be created automatically)  

7) in the sdk directory, in subfolder components/boards, create custom_board.h. Its contents
are in the appendix of this file (scroll below...)

8) place my modified blessed version in the project directory. The subdirectory should be called 
blessed-devel

9) Build the broadcaster example:
cd blessed-devel/examples/radio-broadcaster
make

10) Flash the example:
- in blessed-devel/examples/radio-broadcaster: 
./flash_openocd.sh

11) For debugging:
In eclipse:
    1) Import the radio-broadcaster example as a makefile project 
    2) Click the in menu: Run->Debug Configurations
    3) Create a new "GDB Openocd Debugging" configuration
    4) in the "Main" tab, "C/C++ Application": [PROJECTDIR]/blessed-nRF52/examples/microbit_leds/build/timing-example.out-   
    (replace [PROJECTDIR] by an absolute path to your project)
    5) in the "Debugger" tab, set the executable path to "/usr/local/bin/openocd" and the actual executable to "/usr/local/bin/openocd".
       in the "Config options" of the "Debugger" tab, insert "-f interface/cmsis-dap.cfg -f target/nrf52.cfg"
       under "GDB client setup", set "Executable name" and "Actual executable" both to "/usr/bin/gdb-multiarch"
    7) chose
    6) enjoy :)


12) You should see the microbit board wirelessly, e.g., by installing the "nRF connect for Mobile" app on your smartphone


---  custom_board.h ---
/**
 * Copyright (c) 2012 - 2020, Nordic Semiconductor ASA
 *
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form, except as embedded into a Nordic
 *    Semiconductor ASA integrated circuit in a product or a software update for
 *    such product, must reproduce the above copyright notice, this list of
 *    conditions and the following disclaimer in the documentation and/or other
 *    materials provided with the distribution.
 *
 * 3. Neither the name of Nordic Semiconductor ASA nor the names of its
 *    contributors may be used to endorse or promote products derived from this
 *    software without specific prior written permission.
 *
 * 4. This software, with or without modification, must only be used with a
 *    Nordic Semiconductor ASA integrated circuit.
 *
 * 5. Any software provided in binary form under this license must not be reverse
 *    engineered, decompiled, modified and/or disassembled.
 *
 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */
#ifndef PCA10000_H
#define PCA10000_H

#ifdef __cplusplus
extern "C" {
#endif

#include "nrf_gpio.h"

// Definitions for PCA10000 v2.0.0 or higher

#define LEDS_NUMBER    0


#define LEDS_ACTIVE_STATE 0

#define BUTTONS_LIST {}
#define LEDS_LIST {}

#define LEDS_INV_MASK  LEDS_MASK

// there are no buttons on this board
#define BUTTONS_NUMBER 0

// UART pins connected to J-Link

#define TX_PIN_NUMBER   NRF_GPIO_PIN_MAP(0,6)
#define RX_PIN_NUMBER  NRF_GPIO_PIN_MAP(1,8)
#define CTS_PIN_NUMBER 0
#define RTS_PIN_NUMBER 0
#define HWFC           false



#ifdef __cplusplus
}
#endif

#endif
